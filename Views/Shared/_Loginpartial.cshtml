@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject UserManager<Users> userManager
@inject SignInManager<Users> signInManager;

<ul class="navbar-nav ms-auto">
    @if (signInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Logout">Logout</a>
        </li>
        @* Check if user is in the "Admin" role *@
        @if (await userManager.IsInRoleAsync(await userManager.GetUserAsync(User), "Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Account" asp-action="Profile">Admin Profile</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Account" asp-action="Adminpanel">Admin Panel</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Account" asp-action="Profile">User Profile</a>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
    }
</ul>
